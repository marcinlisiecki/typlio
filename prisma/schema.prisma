generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String @id @default(auto()) @map("_id") @db.ObjectId
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  username      String
  email         String    @unique
  password      String?
  emailVerified DateTime?
  image         String?

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  speedTests    SpeedTest[]

  accounts      Account[]
  sessions      Session[]
}

model SpeedTest {
	id            String    @id @default(auto()) @map("_id") @db.ObjectId
	mode          String
	time          Int
	cpm           Int
	mistakes      Int
	accuracy      Float

	user          User      @relation(fields: [userId], references: [id])
	userId        String

	createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}







